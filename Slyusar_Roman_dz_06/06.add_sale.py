"""
Реализовать простую систему хранения данных о суммах продаж булочной. Должно быть два
скрипта с интерфейсом командной строки: для записи данных и для вывода на экран
записанных данных. При записи передавать из командной строки значение суммы продаж.

Для чтения данных реализовать в командной строке следующую логику:
    ● просто запуск скрипта — выводить все записи;
    ● запуск скрипта с одним параметром-числом — выводить все записи с номера, равного
    этому числу, до конца;
    ● запуск скрипта с двумя числами — выводить записи, начиная с номера, равного
    первому числу, по номер, равный второму числу, включительно.

Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1.

Примеры запуска скриптов:
python add_sale.py 5978,5
python add_sale.py 8914,3
python add_sale.py 7879,1
python add_sale.py 1573,7
python show_sales.py
5978,5
8914,3
7879,1
1573,7
python show_sales.py 3
7879,1
1573,7
python show_sales.py 1 3
5978,5
8914,3
7879,1
"""

import argparse

SALE_DB = "bakers_sale_db.txt"


def add_sale_to_db(amount):
    with open(SALE_DB, "a") as f:
        return f.write(str(amount) + "\n")


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Запись продажи булошной")
    parser.add_argument('sale', type=float, help='Сумма одной продажи.')

    add_sale = parser.parse_args()

    add_sale_to_db(add_sale.sale)
    print("В файл ", SALE_DB, " записана сумма", add_sale.sale)
